# Ballot represents an official deployed ballot contract
# used for Fantom Opera related voting poll.
type Ballot {
    # Address of the ballot, correspond with the smart contract address.
    address: Address!

    # Deployed smart contract handling the ballot voting.
    contract: Contract!

    # Short name of the ballot.
    name: String!

    # URL of the ballot detailed information page.
    detailsUrl: String!

    # An approximate timestamp after which the ballot opens for voting.
    start: Long!

    # An approximate timestamp after which the ballot
    # is closed and no longer accepts votes.
    end: Long!

    # Informs if the ballot is open for voting.
    isOpen: Boolean!

    # Informs if the ballot has already been finalized
    # and the winning proposal is available.
    isFinalized: Boolean!

    # List of proposals of the ballot.
    proposals: [BallotProposal!]!

    # Index of the winning proposal.
    # Is NULL if the ballot has not been finalized yet.
    winner: Int
}

# BallotProposal represents a proposal in the ballot.
type BallotProposal {
    # id is the ballot proposal identifier.
    id: Int!

    # name is the name of the proposal option.
    name: String!
}

# Vote represents a selected vote in a ballot.
type Vote {
    # Address of the ballot the Vote relates to.
    ballot: Address!

    # Address of the voter who placed the vote.
    voter: Address!

    # Account of the voter who placed the vote.
    account: Account!

    # The selected proposal index the voter chose.
    vote: Int
}

# BallotList is a list of ballot edges provided by sequential access request.
type BallotList {
    # Edges contains provided edges of the sequential list.
    edges: [BallotListEdge!]!

    # TotalCount is the maximum number of ballots available
    # for sequential access.
    totalCount: BigInt!

    # PageInfo is an information about the current page
    # of ballot edges.
    pageInfo: ListPageInfo!
}

# BallotListEdge is a single edge in a sequential list of ballots.
type BallotListEdge {
    cursor: Cursor!
    ballot: Ballot!
}
